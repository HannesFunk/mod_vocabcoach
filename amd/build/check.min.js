define("mod_vocabcoach/check",["exports","./repository","core/mustache","./general"],(function(_exports,_repository,_mustache,_general){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.changeMode=changeMode,_exports.init=void 0,_mustache=(obj=_mustache)&&obj.__esModule?obj:{default:obj};let vocabArrayJSON=null,knownCount=0,unknownCount=0,mode="",config={};_exports.init=configuration=>{config=JSON.parse(configuration),config.userid=parseInt(config.userid),"list"===config.source?(0,_repository.getListArrayAJAX)(config.listid).then((response=>{vocabArrayJSON=response,initDots(),changeMode()})):"user"===config.source&&(0,_repository.getBoxArrayAJAX)(config.userid,config.cmid,config.stage,config.force).then((response=>{vocabArrayJSON=response,initDots(),changeMode()})),document.addEventListener("click",(e=>{if(e.target.closest(Selectors.actions.checkTypedVocab))checkTypedVocab(config.userid);else if(e.target.closest(Selectors.actions.revealCard)&&"type"!==mode){const label=e.target.closest(Selectors.actions.revealCard).getElementsByClassName("vc-check-label")[0];(0,_general.showElements)([label,"check-third"],config.thirdActive)}else e.target.closest(Selectors.actions.updateVocab)?(vocabId=vocabArrayJSON[0].dataid,known="true"===e.target.getAttribute("data-vocabcoach-known"),"list"===config.source||config.force?(updateCount(known),showNext()):(0,_repository.updateVocabAJAX)(vocabId,config.userid,known).then((()=>{updateCount(known),showNext()}))):e.target.closest(Selectors.actions.endCheck)?location.href="../../mod/vocabcoach/view.php?id="+config.cmid:e.target.closest(Selectors.actions.revealTypedVocab)?(document.getElementById("input-vocab-front").value=vocabArrayJSON[0].front,document.getElementById("input-vocab-front").disabled=!0,(0,_general.showElement)("button-typed-vocab-next",!0),(0,_general.showElement)("check-third",config.thirdActive),(0,_general.showElements)(["button-typed-vocab-check","button-typed-vocab-reveal"],!1)):e.target.closest(Selectors.actions.typedVocabUnknown)&&((0,_general.showElements)(["button-typed-vocab-next"],!1),(0,_general.showElements)(["button-typed-vocab-reveal","button-typed-vocab-check"],!0),document.getElementById("input-vocab-front").value="",document.getElementById("input-vocab-front").disabled=!1,(0,_repository.updateVocabAJAX)(vocabArrayJSON[0].dataid,config.userid,!1).then((()=>{updateCount(!1),showNext()})));var vocabId,known})),document.addEventListener("change",(e=>{e.target.closest(Selectors.formElements.mode)&&changeMode()})),document.addEventListener("change",(e=>{e.target.closest(Selectors.formElements.typedVocab)&&document.getElementById("input-vocab-front").classList.remove("wrong")})),document.addEventListener("keyup",(e=>{e.target.closest(Selectors.formElements.typedVocab)&&"Enter"===e.key&&checkTypedVocab(config.userid)}))};const Selectors={actions:{revealCard:'[data-action="mod_vocabcoach/reveal-card"]',updateVocab:'[data-action="mod_vocabcoach/update-vocab"]',endCheck:'[data-action="mod_vocabcoach/end-check"]',modeChanged:'[data-action="mod-vocabcoach/change-mode"]',checkTypedVocab:'[data-action="mod-vocabcoach/typed-vocab-check"]',revealTypedVocab:'[data-action="mod-vocabcoach/typed-vocab-reveal"]',typedVocabUnknown:'[data-action="mod-vocabcoach/typed-vocab-unknown"]'},formElements:{mode:'[id="check-mode"]',typedVocab:'[id="input-vocab-front"]'}};function initDots(){const progressBar=document.getElementById("progress-bar"),totalVocab=vocabArrayJSON.length,greyDotContainer=document.createElement("div"),greyDot=document.createElement("div");greyDot.classList.add("vocab-dot"),greyDot.classList.add("unchecked"),greyDotContainer.appendChild(greyDot);for(let i=0;i<totalVocab;i++){let newDot=greyDotContainer.cloneNode(!0);newDot.style.transform="translateX(calc(100% - "+12*(i+1)+"px))",newDot.setAttribute("data-new-shift",12*(totalVocab-i)),progressBar.appendChild(newDot)}}function changeMode(){mode=document.getElementById("check-mode").value,vocabArrayJSON=function(array){for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]]}return array}(vocabArrayJSON);const checkAreaElem=document.getElementById("check-area");startAnimation(checkAreaElem,"animation-slide-out").then((()=>{"type"===mode?((0,_general.showElements)(["check-box-front","check-buttons"],!1),(0,_general.showElements)(["check-back","check-type-area"],!0),document.getElementById("input-vocab-front").value="",(0,_general.showElement)(document.getElementsByClassName("instruction-front-back-random")[0],!1)):((0,_general.showElements)(["check-buttons","check-box-front"],!0),(0,_general.showElements)(["check-type-area"],!1),(0,_general.showElement)(document.getElementsByClassName("instruction-front-back-random")[0],!0)),resetCheckFields(),updateLabels(),startAnimation(checkAreaElem,"animation-slide-in").then(null)}))}function checkTypedVocab(){const typed=document.getElementById("input-vocab-front").value,correct=vocabArrayJSON[0].front;typed!==correct||config.force?typed===correct?(updateCount(!0),showNext()):document.getElementById("input-vocab-front").classList.add("wrong"):(0,_repository.updateVocabAJAX)(vocabArrayJSON[0].dataid,config.userid,!0).then((()=>{updateCount(!0),showNext()}))}function showNext(){let removeShown=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];removeShown&&vocabArrayJSON.splice(0,1);const numberRemaining=vocabArrayJSON.length;if(document.getElementsByClassName("check-number-remaining")[0].innerHTML="Noch "+numberRemaining+" Vokabel"+(1===numberRemaining?"":"n"),0===numberRemaining)return void showSummary();const checkAreaElem=document.getElementById("check-area");startAnimation(checkAreaElem,"animation-slide-out").then((()=>{resetCheckFields(),updateLabels(),startAnimation(checkAreaElem,"animation-slide-in").then(null)}))}function updateLabels(){document.getElementById("check-front").innerHTML=vocabArrayJSON[0].front,document.getElementById("check-back").innerHTML=vocabArrayJSON[0].back,document.getElementById("check-third").innerHTML=vocabArrayJSON[0].third,document.getElementById("check-container").setAttribute("data-vocab-data-id",vocabArrayJSON[0].dataid)}function resetCheckFields(){switch((0,_general.showElement)("check-third",!1),mode){case"random":{const random=Math.floor(2*Math.random());(0,_general.showElement)("check-front",1===random),(0,_general.showElement)("check-back",0===random);break}case"front":case"back":(0,_general.showElement)("check-front","front"===mode),(0,_general.showElement)("check-back","back"===mode);break;case"type":document.getElementById("input-vocab-front").value=""}}function showSummary(){let templateData=null,template=null;const getMsg=(0,_repository.getFeedbackLineAJAX)(function(){const ratio=knownCount/(unknownCount+knownCount);if(ratio>.9)return 5;if(ratio>.7)return 3;if(ratio>.5)return 2;if(ratio>.3)return 1;return 0}()).then((result=>{templateData={known:knownCount,total:knownCount+unknownCount,message:result.line,thirdActive:config.thirdActive}})),getTemplate=fetch("../../mod/vocabcoach/templates/check_summary.mustache").then((res=>res.text())).then((text=>{template=text})),logDetails={total:knownCount+unknownCount,known:knownCount,force:config.force,mode:config.source};"user"===config.source&&(logDetails.stage=config.stage);const logNumber=(0,_repository.logCheckedVocabsAJAX)(config.userid,config.cmid,JSON.stringify(logDetails));Promise.all([getMsg,getTemplate,logNumber]).then((()=>{const summaryContainer=document.getElementsByClassName("check-summary")[0];summaryContainer.innerHTML=_mustache.default.render(template,templateData),(0,_general.showElement)(summaryContainer,!0),(0,_general.showElements)(["check-box-front","check-box-back","check-type-area","check-box-third","check-buttons"],!1);const instructionElement=document.getElementsByClassName("instruction-front-back-random")[0];instructionElement.innerHTML="Klicke in das Feld, um die Abfrage zu beenden.",(0,_general.showElement)(instructionElement,!0)}))}function updateCount(known){known?knownCount++:unknownCount++;let bullets=document.querySelectorAll(".vocab-dot.unchecked"),bullet=bullets[bullets.length-1];const newShift=bullet.parentNode.getAttribute("data-new-shift");bullet.parentNode.style.transform="translateX("+newShift+"px)",bullet.classList.add(known?"dot-green":"dot-red"),bullet.classList.remove("unchecked")}let startAnimation=(el,animation)=>new Promise((resolve=>{const listener=()=>{el.removeEventListener("animationend",listener),el.classList.remove(animation),resolve()};el.addEventListener("animationend",listener),el.classList.add(animation)}))}));

//# sourceMappingURL=check.min.js.map