define("mod_vocabcoach/check",["exports","./repository"],(function(_exports,_repository){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.changeMode=changeMode,_exports.init=void 0;let vocabArrayJSON=null,modid=-1,knownCount=0,unknownCount=0,mode="front";_exports.init=(userid,addInfo,moduleid)=>{var listid;modid=moduleid,-1===(userid=parseInt(userid))?(listid=addInfo,(0,_repository.getListArrayAJAX)(listid).then((response=>{vocabArrayJSON=response,showNext()}))):function(userid,stage){(0,_repository.getBoxArrayAJAX)(userid,modid,stage).then((response=>{vocabArrayJSON=response,showNext()}))}(userid,addInfo),function(userid){document.addEventListener("click",(e=>{var vocabId,userId,known;e.target.closest(Selectors.actions.checkTypedVocab)?function(userid){const currElementDataID=parseInt(document.getElementById("check-container").getAttribute("data-vocab-data-id"));if(-1!==currElementDataID&&vocabArrayJSON[0].dataid!==currElementDataID)return void console.log("currElementID does not equal 0-element in vocabArrayJSON");const typed=document.getElementById("input-vocab-front").value,correct=vocabArrayJSON[0].front;typed===correct?(0,_repository.updateVocabAJAX)(vocabArrayJSON[0].dataid,userid,!0).then((()=>{knownCount++,showNext()})):document.getElementById("input-vocab-front").classList.add("wrong")}(userid):e.target.closest(Selectors.actions.revealCard)&&"type"!==mode?function(triggeringBox){const element=triggeringBox.childNodes[0];"none"===element.style.display&&(element.style.display="unset")}(e.target):e.target.closest(Selectors.actions.updateVocab)?(vocabId=vocabArrayJSON[0].dataid,userId=userid,known="true"===e.target.getAttribute("data-vocabcoach-known"),-1!==userId?(0,_repository.updateVocabAJAX)(vocabId,userId,known).then((()=>{updateCount(known),showNext()})):(updateCount(known),showNext())):e.target.closest(Selectors.actions.endCheck)?location.href="/moodle/mod/vocabcoach/view.php?id="+modid:e.target.closest(Selectors.actions.revealTypedVocab)?(document.getElementById("input-vocab-front").value=vocabArrayJSON[0].front,document.getElementById("input-vocab-front").disabled=!0,document.getElementById("button-typed-vocab-next").style.display="unset",document.getElementById("button-typed-vocab-check").style.display="none",document.getElementById("button-typed-vocab-reveal").style.display="none"):e.target.closest(Selectors.actions.typedVocabUnkown)&&(document.getElementById("button-typed-vocab-next").style.display="none",document.getElementById("input-vocab-front").value="",document.getElementById("input-vocab-front").disabled=!1,document.getElementById("button-typed-vocab-check").style.display="unset",document.getElementById("button-typed-vocab-reveal").style.display="unset",(0,_repository.updateVocabAJAX)(vocabArrayJSON[0].dataid,userid,!1).then((()=>{showNext()})))})),document.addEventListener("change",(e=>{e.target.closest(Selectors.formElements.mode)&&changeMode()})),document.addEventListener("keyup",(e=>{e.target.closest(Selectors.formElements.typedVocab)&&document.getElementById("input-vocab-front").classList.remove("wrong")}))}(userid),resetCheckFields()};const Selectors={actions:{revealCard:'[data-action="mod_vocabcoach/reveal-card"]',updateVocab:'[data-action="mod_vocabcoach/update-vocab"]',endCheck:'[data-action="mod_vocabcoach/end-check"]',modeChanged:'[data-action="mod-vocabcoach/change-mode"]',checkTypedVocab:'[data-action="mod-vocabcoach/typed-vocab-check"]',revealTypedVocab:'[data-action="mod-vocabcoach/typed-vocab-reveal"]',typedVocabUnkown:'[data-action="mod-vocabcoach/typed-vocab-unknown"]'},formElements:{mode:'[id="check-mode"]',typedVocab:'[id="input-vocab-front"]'}};function changeMode(){mode=document.getElementById("check-mode").value,"type"===mode?(document.getElementById("check-front").style.display="none",document.getElementById("check-type-area").style.display="unset",document.getElementById("input-vocab-front").value="",document.getElementById("check-buttons").style.display="none",document.getElementsByClassName("instruction-front-back-random")[0].style.display="none"):(document.getElementById("check-front").style.display="unset",document.getElementById("check-type-area").style.display="none",document.getElementById("check-buttons").removeAttribute("style"),document.getElementsByClassName("instruction-front-back-random")[0].style.display="unset"),"front"!==mode&&"back"!==mode||resetCheckFields(mode)}function showNext(){const currElementDataID=parseInt(document.getElementById("check-container").getAttribute("data-vocab-data-id"));if(-1!==currElementDataID&&vocabArrayJSON[0].dataid!==currElementDataID)return void console.log("currElementID does not equal 0-element in vocabArrayJSON");-1!==currElementDataID&&vocabArrayJSON.splice(0,1);const numberRemaining=vocabArrayJSON.length;if(document.getElementsByClassName("check-number-remaining")[0].innerHTML="Noch "+numberRemaining+" Vokabel"+(1===numberRemaining?"":"n"),0!==numberRemaining)if(document.getElementById("check-front").innerHTML=vocabArrayJSON[0].front,document.getElementById("check-back").innerHTML=vocabArrayJSON[0].back,document.getElementById("check-container").setAttribute("data-vocab-data-id",vocabArrayJSON[0].dataid),"random"===mode){resetCheckFields(0===Math.floor(2*Math.random()))}else"type"===mode?document.getElementById("input-vocab-front").value="":resetCheckFields(mode);else!function(){document.getElementById("check-box-front").style.display="none",document.getElementById("check-box-back").style.display="none";const summaryElement=document.getElementById("check-summary");summaryElement.getElementsByClassName("check-summary-message")[0].innerHTML=function(){const ratio=knownCount/(unknownCount+knownCount);if(ratio>.9)return"Hervorragend!";if(ratio>.7)return"Gut gemacht!";if(ratio>.5)return"Du hast einiges erreicht!";if(ratio>.3)return"Das kannst du besser!";return"Hm. Da musst du nochmal ran!"}(),summaryElement.getElementsByClassName("check-summary-known")[0].innerHTML=knownCount,summaryElement.getElementsByClassName("check-summary-total")[0].innerHTML=unknownCount+knownCount,summaryElement.style.display="flex"}()}function resetCheckFields(side){document.getElementById("check-front").style.display="front"===side?"unset":"none",document.getElementById("check-back").style.display="front"===side?"none":"unset"}function updateCount(known){known?knownCount++:unknownCount++}}));

//# sourceMappingURL=check.min.js.map