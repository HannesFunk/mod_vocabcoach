{"version":3,"file":"check.min.js","sources":["../src/check.js"],"sourcesContent":["import {getBoxArrayAJAX, getFeedbackLineAJAX, getListArrayAJAX, updateVocabAJAX} from \"./repository\";\nimport mustache from 'core/mustache';\nimport {showElement, showElements} from \"./general\";\n\nlet vocabArrayJSON = null;\nlet modid = -1;\nlet knownCount = 0;\nlet unknownCount = 0;\nlet mode = 'back';\nlet force = false;\n\nexport const init = (userid, addInfo, moduleid, force_init = false) => {\n    modid = moduleid;\n    userid = parseInt(userid);\n    force = force_init;\n    if (userid === -1) {\n        getListArrayAJAX(addInfo).then(response => {\n            vocabArrayJSON = response;\n            showNext(false);\n            }\n        );\n    } else {\n        getBoxArrayAJAX(userid, modid, addInfo, force).then(response => {\n            vocabArrayJSON = response;\n            showNext(false);\n            }\n        );\n    }\n    addListeners(userid);\n};\n\nfunction addListeners(userid) {\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.actions.checkTypedVocab)) {\n            checkTypedVocab(userid);\n        } else if (e.target.closest(Selectors.actions.revealCard) && mode !== 'type') {\n            const label = e.target.closest(Selectors.actions.revealCard).getElementsByClassName('vc-check-label')[0];\n            showElement(label, true);\n        } else if (e.target.closest(Selectors.actions.updateVocab)) {\n            checkDone(vocabArrayJSON[0].dataid, userid, e.target.getAttribute('data-vocabcoach-known') === 'true');\n        } else if (e.target.closest(Selectors.actions.endCheck)) {\n            endCheck();\n        } else if (e.target.closest(Selectors.actions.revealTypedVocab)) {\n            document.getElementById('input-vocab-front').value = vocabArrayJSON[0].front;\n            document.getElementById('input-vocab-front').disabled = true;\n\n            showElements(['button-typed-vocab-next'], true);\n            showElements(['button-typed-vocab-check', 'button-typed-vocab-reveal'], false);\n        } else if (e.target.closest(Selectors.actions.typedVocabUnknown)) {\n            showElements(['button-typed-vocab-next'], false);\n            showElements(['button-typed-vocab-reveal', 'button-typed-vocab-check'], true);\n\n            document.getElementById('input-vocab-front').value = '';\n            document.getElementById('input-vocab-front').disabled = false;\n\n            updateVocabAJAX(vocabArrayJSON[0].dataid, userid, false).then(() => { showNext();});\n        }\n    });\n\n    document.addEventListener('change', e => {\n        if (e.target.closest(Selectors.formElements.mode)) {\n            changeMode();\n        }\n    });\n\n    document.addEventListener('change', e => {\n        if (e.target.closest(Selectors.formElements.typedVocab)) {\n            document.getElementById('input-vocab-front').classList.remove('wrong');\n        }\n    });\n\n    document.addEventListener('keyup', e => {\n        if (e.target.closest(Selectors.formElements.typedVocab) &&\n            e.key === 'Enter') {\n                checkTypedVocab(userid);\n        }\n    });\n}\n\nconst Selectors = {\n    actions: {\n        revealCard: '[data-action=\"mod_vocabcoach/reveal-card\"]',\n        updateVocab: '[data-action=\"mod_vocabcoach/update-vocab\"]',\n        endCheck: '[data-action=\"mod_vocabcoach/end-check\"]',\n        modeChanged: '[data-action=\"mod-vocabcoach/change-mode\"]',\n        checkTypedVocab: '[data-action=\"mod-vocabcoach/typed-vocab-check\"]',\n        revealTypedVocab: '[data-action=\"mod-vocabcoach/typed-vocab-reveal\"]',\n        typedVocabUnknown: '[data-action=\"mod-vocabcoach/typed-vocab-unknown\"]',\n    },\n    formElements : {\n        mode: '[id=\"check-mode\"]',\n        typedVocab: '[id=\"input-vocab-front\"]',\n    },\n};\n\nexport function changeMode() {\n    mode = document.getElementById('check-mode').value;\n    vocabArrayJSON = shuffle(vocabArrayJSON);\n    const checkAreaElem = document.getElementById('check-area');\n    startAnimation(checkAreaElem, 'animation-slide-out').then(\n        () => {\n            if (mode === 'type') {\n                showElements(['check-box-front', 'check-buttons'], false);\n                showElements(['check-back', 'check-type-area'], true);\n                document.getElementById('input-vocab-front').value = '';\n                showElement(document.getElementsByClassName('instruction-front-back-random')[0], false);\n            } else {\n                showElements(['check-buttons', 'check-box-front'], true);\n                showElements(['check-type-area'], false);\n                showElement(document.getElementsByClassName('instruction-front-back-random')[0], true);\n            }\n            resetCheckFields();\n            updateLabels();\n            startAnimation(checkAreaElem, 'animation-slide-in').then(null);\n        });\n}\n\nfunction checkTypedVocab (userid) {\n    const typed = document.getElementById('input-vocab-front').value;\n    const correct = vocabArrayJSON[0].front;\n\n    if (typed === correct && !force) {\n        updateVocabAJAX(vocabArrayJSON[0].dataid, userid, true).then(\n            () => {\n                knownCount++;\n                showNext();\n            }\n        );\n    } else if (typed === correct) {\n        knownCount++;\n        showNext();\n    } else {\n        document.getElementById('input-vocab-front').classList.add('wrong');\n    }\n}\n\nfunction showNext(removeShown = true) {\n    if (removeShown) {\n        vocabArrayJSON.splice(0, 1);\n    }\n\n    const numberRemaining = vocabArrayJSON.length;\n    document.getElementsByClassName('check-number-remaining')[0].innerHTML = 'Noch ' + numberRemaining +\n        ' Vokabel' + (numberRemaining === 1 ? '' : 'n');\n\n    if (numberRemaining === 0) {\n        showSummary();\n        return;\n    }\n\n    const checkAreaElem = document.getElementById('check-area');\n    startAnimation(checkAreaElem, 'animation-slide-out').then(\n        () => {\n            resetCheckFields();\n            updateLabels();\n            startAnimation(checkAreaElem, 'animation-slide-in').then(null);\n        }\n    );\n}\n\nfunction updateLabels () {\n    document.getElementById('check-front').innerHTML = vocabArrayJSON[0].front;\n    document.getElementById('check-back').innerHTML = vocabArrayJSON[0].back;\n    document.getElementById('check-container').setAttribute('data-vocab-data-id', vocabArrayJSON[0].dataid);\n}\n\nfunction resetCheckFields() {\n    switch (mode) {\n        case 'random': {\n            const random = Math.floor(Math.random() * 2);\n            showElement('check-front', random === 1);\n            showElement('check-back', random === 0);\n            break;\n        }\n        case 'front':\n        case 'back':\n            showElement('check-front', mode === 'front');\n            showElement('check-back', mode === 'back');\n            break;\n\n        case 'type':\n            document.getElementById('input-vocab-front').value = '';\n            break;\n    }\n}\n\nfunction endCheck() {\n    location.href = '../../mod/vocabcoach/view.php?id=' + modid;\n}\n\nfunction showSummary() {\n    let templateData = null;\n    let template = null;\n    const getMsg = getFeedbackLineAJAX(getSummaryAchievement()).then(\n        (result) => {\n            templateData = {\n                known: knownCount,\n                total: knownCount + unknownCount,\n                message: result.line\n            };\n        }\n    );\n\n    const getTemplate = fetch('../../mod/vocabcoach/templates/check_summary.mustache').then(\n        (res) => {\n            return res.text();\n        }\n    ).then(\n        (text) => {template = text; }\n    );\n\n    Promise.all([getMsg, getTemplate]).then(() => {\n        const summaryContainer = document.getElementsByClassName('check-summary')[0];\n        summaryContainer.innerHTML = mustache.render(template, templateData);\n        showElement(summaryContainer, true);\n        showElements(['check-box-front', 'check-box-back'], false);\n    });\n}\n\nfunction getSummaryAchievement() {\n    const ratio = knownCount/(unknownCount + knownCount);\n\n    if (ratio > 0.9) {\n        return 5;\n    }\n    if (ratio > 0.7) {\n        return 3;\n    }\n    if (ratio > 0.5) {\n        return 2;\n    }\n    if (ratio > 0.3) {\n        return 1;\n    }\n    return 0;\n}\n\n\nfunction checkDone(vocabId, userId, known) {\n    if (userId === -1 || force) {\n        updateCount(known);\n        showNext();\n    }\n    else {\n    updateVocabAJAX(vocabId, userId, known).then(\n            () => {\n                updateCount(known);\n                showNext();\n            }\n        );\n    }\n}\n\nfunction updateCount(known) {\n    if (known) {\n        knownCount++;\n    } else {\n        unknownCount++;\n    }\n}\n\nfunction shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nlet startAnimation = (el, animation) => {\n    return new Promise(resolve => {\n        const listener = () => {\n            el.removeEventListener('animationend', listener);\n            el.classList.remove(animation);\n            resolve();\n        };\n        el.addEventListener('animationend', listener);\n        el.classList.add(animation);\n    });\n};"],"names":["vocabArrayJSON","modid","knownCount","unknownCount","mode","force","addListeners","userid","document","addEventListener","e","target","closest","Selectors","actions","checkTypedVocab","revealCard","label","getElementsByClassName","updateVocab","vocabId","dataid","userId","known","getAttribute","updateCount","showNext","then","endCheck","location","href","revealTypedVocab","getElementById","value","front","disabled","typedVocabUnknown","formElements","changeMode","typedVocab","classList","remove","key","addInfo","moduleid","force_init","parseInt","response","modeChanged","array","i","length","j","Math","floor","random","shuffle","checkAreaElem","startAnimation","resetCheckFields","updateLabels","typed","correct","add","removeShown","splice","numberRemaining","innerHTML","showSummary","back","setAttribute","templateData","template","getMsg","ratio","getSummaryAchievement","result","total","message","line","getTemplate","fetch","res","text","Promise","all","summaryContainer","mustache","render","el","animation","resolve","listener","removeEventListener"],"mappings":"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"}