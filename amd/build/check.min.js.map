{"version":3,"file":"check.min.js","sources":["../src/check.js"],"sourcesContent":["import {getBoxArrayAJAX, getListArrayAJAX, updateVocabAJAX} from \"./repository\";\nimport mustache from 'core/mustache';\n\nlet vocabArrayJSON = null;\nlet modid = -1;\nlet knownCount = 0;\nlet unknownCount = 0;\nlet mode = 'front';\nlet force = false;\n\nexport const init = (userid, addInfo, moduleid, force_init = false) => {\n    modid = moduleid;\n    userid = parseInt(userid);\n    force = force_init;\n    if (userid === -1) {\n        getListVocab(addInfo);\n    } else {\n        getBoxVocab(userid, addInfo, force);\n    }\n    addListeners(userid);\n    resetCheckFields();\n};\n\nfunction addListeners(userid) {\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.actions.checkTypedVocab)) {\n            checkTypedVocab(userid);\n        } else if (e.target.closest(Selectors.actions.revealCard) && mode !== 'type') {\n            reveal(e.target);\n        } else if (e.target.closest(Selectors.actions.updateVocab)) {\n            checkDone(vocabArrayJSON[0].dataid, userid, e.target.getAttribute('data-vocabcoach-known') === 'true');\n        } else if (e.target.closest(Selectors.actions.endCheck)) {\n            endCheck();\n        } else if (e.target.closest(Selectors.actions.revealTypedVocab)) {\n            document.getElementById('input-vocab-front').value = vocabArrayJSON[0].front;\n            document.getElementById('input-vocab-front').disabled = true;\n            document.getElementById('button-typed-vocab-next').style.display = 'unset';\n            document.getElementById('button-typed-vocab-check').style.display = 'none';\n            document.getElementById('button-typed-vocab-reveal').style.display = 'none';\n        } else if (e.target.closest(Selectors.actions.typedVocabUnkown)) {\n            document.getElementById('button-typed-vocab-next').style.display = 'none';\n            document.getElementById('input-vocab-front').value = '';\n            document.getElementById('input-vocab-front').disabled = false;\n            document.getElementById('button-typed-vocab-check').style.display = 'unset';\n            document.getElementById('button-typed-vocab-reveal').style.display = 'unset';\n            updateVocabAJAX(vocabArrayJSON[0].dataid, userid, false).then(() => { showNext();});\n        }\n    });\n\n    document.addEventListener('change', e => {\n        if (e.target.closest(Selectors.formElements.mode)) {\n            changeMode();\n        }\n    });\n\n    document.addEventListener('keyup', e => {\n        if (e.target.closest(Selectors.formElements.typedVocab)) {\n            document.getElementById('input-vocab-front').classList.remove('wrong');\n        }\n    });\n}\n\nconst Selectors = {\n    actions: {\n        revealCard: '[data-action=\"mod_vocabcoach/reveal-card\"]',\n        updateVocab: '[data-action=\"mod_vocabcoach/update-vocab\"]',\n        endCheck: '[data-action=\"mod_vocabcoach/end-check\"]',\n        modeChanged: '[data-action=\"mod-vocabcoach/change-mode\"]',\n        checkTypedVocab: '[data-action=\"mod-vocabcoach/typed-vocab-check\"]',\n        revealTypedVocab: '[data-action=\"mod-vocabcoach/typed-vocab-reveal\"]',\n        typedVocabUnkown: '[data-action=\"mod-vocabcoach/typed-vocab-unknown\"]',\n    },\n    formElements : {\n        mode: '[id=\"check-mode\"]',\n        typedVocab: '[id=\"input-vocab-front\"]',\n    },\n};\nexport function changeMode() {\n    mode = document.getElementById('check-mode').value;\n    if (mode === 'type') {\n        document.getElementById('check-front').style.display = 'none';\n        document.getElementById('check-back').style.display = 'unset';\n        document.getElementById('check-type-area').style.display = 'unset';\n        document.getElementById('input-vocab-front').value = '';\n        document.getElementById('check-buttons').style.display = 'none';\n        document.getElementsByClassName('instruction-front-back-random')[0].style.display = 'none';\n    } else {\n        document.getElementById('check-front').style.display = 'unset';\n        document.getElementById('check-type-area').style.display = 'none';\n        document.getElementById('check-buttons').removeAttribute('style');\n        document.getElementsByClassName('instruction-front-back-random')[0].style.display = 'unset';\n    }\n\n    if (mode === 'front' || mode === 'back') {\n        resetCheckFields(mode);\n    }\n}\n\nfunction getBoxVocab (userid, stage, force)  {\n    getBoxArrayAJAX(userid, modid, stage, force).then(response => {\n        vocabArrayJSON = response;\n        showNext();\n        }\n    );\n}\n\nfunction getListVocab (listid)  {\n    getListArrayAJAX(listid).then(response => {\n            vocabArrayJSON = response;\n            showNext();\n        }\n    );\n}\n\nfunction checkTypedVocab (userid) {\n    const currElementDataID = parseInt(document.getElementById('check-container').getAttribute('data-vocab-data-id'));\n\n    if (currElementDataID !== -1 && vocabArrayJSON[0].dataid !== currElementDataID) { // This is weird and shouldn't happen!\n        console.log(\"currElementID does not equal 0-element in vocabArrayJSON\");\n        return;\n    }\n\n    const typed = document.getElementById('input-vocab-front').value;\n    const correct = vocabArrayJSON[0].front;\n\n    if (typed === correct && !force) {\n        updateVocabAJAX(vocabArrayJSON[0].dataid, userid, true).then(\n            () => {\n                knownCount++;\n                showNext();\n            }\n        );\n    } else if (typed === correct) {\n        knownCount++;\n        showNext();\n    } else {\n        document.getElementById('input-vocab-front').classList.add('wrong');\n    }\n}\nfunction showNext() {\n    const currElementDataID = parseInt(document.getElementById('check-container').getAttribute('data-vocab-data-id'));\n\n    if (currElementDataID !== -1 && vocabArrayJSON[0].dataid !== currElementDataID) { // This is weird and shouldn't happen!\n        console.log(\"currElementID does not equal 0-element in vocabArrayJSON\");\n        return;\n    }\n\n    if (currElementDataID !== -1) {\n        vocabArrayJSON.splice(0, 1);\n    }\n\n    const numberRemaining = vocabArrayJSON.length;\n    document.getElementsByClassName('check-number-remaining')[0].innerHTML = 'Noch ' + numberRemaining +\n        ' Vokabel' + (numberRemaining === 1 ? '' : 'n');\n\n    if (numberRemaining === 0) {\n        showSummary();\n        return;\n    }\n\n    document.getElementById('check-front').innerHTML = vocabArrayJSON[0].front;\n    document.getElementById('check-back').innerHTML = vocabArrayJSON[0].back;\n    document.getElementById('check-container').setAttribute('data-vocab-data-id', vocabArrayJSON[0].dataid);\n\n    if (mode === 'random') {\n        const random = Math.floor(Math.random() * 2) === 0;\n        resetCheckFields(random);\n    } else if (mode === 'type') {\n        document.getElementById('input-vocab-front').value = '';\n    } else {\n        resetCheckFields(mode);\n    }\n}\n\nfunction resetCheckFields(side) {\n    document.getElementById('check-front').style.display = (side === 'front' ? 'unset' : 'none');\n    document.getElementById('check-back').style.display = (side === 'front' ? 'none' : 'unset');\n}\n\nfunction endCheck() {\n    location.href = '../../mod/vocabcoach/view.php?id=' + modid;\n}\n\nfunction showSummary() {\n    const templateData = {\n        known: knownCount,\n        total: knownCount + unknownCount,\n        message: getSummaryMessage()\n    };\n    fetch('../../mod/vocabcoach/templates/check_summary.mustache').then(\n        (res) => {\n            return res.text();\n        }\n    ).then(\n        (template) => {\n            const output = mustache.render(template, templateData);\n            const summaryContainer = document.getElementsByClassName('check-summary')[0];\n            summaryContainer.innerHTML = output;\n            summaryContainer.classList.remove('hidden');\n            document.getElementById('check-box-front').style.display = 'none';\n            document.getElementById('check-box-back').style.display = 'none';\n        }\n    );\n\n\n}\n\nfunction getSummaryMessage() {\n    const ratio = knownCount/(unknownCount + knownCount);\n\n    if (ratio > 0.9) {\n        return \"Hervorragend!\";\n    }\n    if (ratio > 0.7) {\n        return \"Gut gemacht!\";\n    }\n    if (ratio > 0.5) {\n        return \"Du hast einiges erreicht!\";\n    }\n    if (ratio > 0.3) {\n        return \"Das kannst du besser!\";\n    }\n    return \"Hm. Da musst du nochmal ran!\";\n}\n\nfunction reveal(triggeringBox) {\n    const element = triggeringBox.childNodes[0];\n    if (element.style.display === 'none') {\n        element.style.display = 'unset';\n    }\n}\n\nfunction checkDone(vocabId, userId, known) {\n    if (userId === -1 || force) {\n        updateCount(known);\n        showNext();\n    }\n    else {\n    updateVocabAJAX(vocabId, userId, known).then(\n            () => {\n                updateCount(known);\n                showNext();\n            }\n        );\n    }\n}\n\nfunction updateCount(known) {\n    if (known) {\n        knownCount++;\n    } else {\n        unknownCount++;\n    }\n}\n"],"names":["vocabArrayJSON","modid","knownCount","unknownCount","mode","force","addListeners","userid","document","addEventListener","e","vocabId","userId","known","target","closest","Selectors","actions","checkTypedVocab","currElementDataID","parseInt","getElementById","getAttribute","dataid","console","log","typed","value","correct","front","showNext","classList","add","then","revealCard","triggeringBox","element","childNodes","style","display","reveal","updateVocab","updateCount","endCheck","location","href","revealTypedVocab","disabled","typedVocabUnkown","formElements","changeMode","typedVocab","remove","addInfo","moduleid","force_init","getListVocab","getBoxVocab","resetCheckFields","modeChanged","getElementsByClassName","removeAttribute","stage","response","listid","splice","numberRemaining","length","innerHTML","back","setAttribute","Math","floor","random","templateData","total","message","getSummaryMessage","fetch","res","text","template","output","mustache","render","summaryContainer","showSummary","side","ratio"],"mappings":"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"}