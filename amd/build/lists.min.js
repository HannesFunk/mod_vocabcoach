define("mod_vocabcoach/lists",["exports","./repository","core/templates","core/notification","core/log"],(function(_exports,_repository,_templates,_notification,_log){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let cmid,userId;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=function(moduleId,userIdString,capabilitiesInfo){cmid=parseInt(moduleId),userId=parseInt(userIdString),printLists(JSON.parse(capabilitiesInfo)),document.addEventListener("click",(e=>{if(e.target.closest(Selectors.actions.deleteList))listid=e.target.getAttribute("data-list-id"),(0,_notification.saveCancel)("Bestätigung","Soll diese Liste wirklich gelöscht werden?","Bestätigen",(()=>{(0,_repository.deleteListAJAX)(listid).then((()=>{document.querySelectorAll('tr[data-list-id="'+listid+'"]')[0].remove(),_notification.default.addNotification({type:"success",message:"Liste gelöscht."}).then(null)}))}),null).catch((error=>_log.default.debug(error)));else if(e.target.closest(Selectors.actions.checkList))location.href="check.php?id="+cmid+"&source=list&listid="+e.target.getAttribute("data-list-id");else if(e.target.closest(Selectors.actions.showPdf)){const menuItem=e.target.closest(Selectors.actions.showPdf);window.open("vocablist_pdf.php?listid="+menuItem.getAttribute("data-list-id")+"&cmid="+cmid,"_blank").focus()}else if(e.target.closest(Selectors.actions.editList)){const menuItem=e.target.closest(Selectors.actions.editList);location.href="add_vocab.php?id="+cmid+"&mode=edit&listid="+menuItem.getAttribute("data-list-id")}else if(e.target.closest(Selectors.actions.addListToUser)){!function(listid){(0,_repository.addListToUserAJAX)(listid,userId,cmid).then((()=>{const notificationData={message:"Neue Vokabeln von dieser Liste wurden deinem Karteikarten hinzugefügt.",type:"success"};_notification.default.addNotification(notificationData).then(null)}))}(e.target.closest(Selectors.actions.addListToUser).getAttribute("data-list-id"))}else if(e.target.closest(Selectors.actions.closePage))location.href="../../mod/vocabcoach/view.php?id="+cmid;else if(e.target.closest(Selectors.actions.toggleUserSwitch)){const userSwitch=document.getElementById("userswitch"),newState=!userSwitch.checked;userSwitch.checked=newState,printLists(capabilitiesInfo,newState)}else if(e.target.closest(Selectors.actions.distributeList)){!function(listid,vocabcoachId){const doIt=()=>{(0,_repository.distributeListAJAX)(listid,vocabcoachId).then((()=>{_notification.default.addNotification({type:"success",message:"Liste an alle Teilnehmer in diesem Kurs verteilt."}).then(null)}))};(0,_notification.saveCancel)("Bestätigung","Soll diese Liste wirklich an alle Teilnehmer in diesem Kurs verteilt werden?","Bestätigen",doIt,null).catch((error=>_log.default.debug(error)))}(e.target.closest(Selectors.actions.distributeList).getAttribute("data-list-id"),cmid)}var listid})),document.addEventListener("change",(e=>{"toggle-user-switch"===e.target.getAttribute("data-action")&&printLists(capabilitiesInfo,!0)}))},_exports.printLists=printLists,_templates=_interopRequireDefault(_templates),_notification=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(_notification),_log=_interopRequireDefault(_log);const Selectors={actions:{deleteList:'[data-action="mod_vocabcoach/delete_list"]',checkList:'[data-action="mod_vocabcoach/check_list"]',showPdf:'[data-action="mod_vocabcoach/show_pdf"]',editList:'[data-action="mod_vocabcoach/edit_list"]',addListToUser:'[data-action="mod_vocabcoach/add_list_to_user"]',closePage:'[data-action="mod_vocabcoach/close_page"]',distributeList:'[data-action="mod_vocabcoach/distribute_list"]',toggleUserSwitch:'[data-action="mod_vocabcoach/toggle-user-switch"]'}};function printLists(capInfo){let onlyOwnLists=arguments.length>1&&void 0!==arguments[1]&&arguments[1],json=null;const getData=(0,_repository.getListsAJAX)(cmid,userId,onlyOwnLists).then((res=>{res.forEach((list=>{list.editable=capInfo.canEdit||list.createdby===userId,list.distributable=capInfo.canDistribute})),json={lists:res,loading:!1,cmid:cmid,onlyOwnLists:onlyOwnLists},0===res.length&&(json.emptyList=!0)}));Promise.all([getData]).then((()=>{_templates.default.renderForPromise("mod_vocabcoach/lists",json).then((res=>{document.querySelectorAll('[role="main"]')[0].innerHTML=res.html}))}))}}));

//# sourceMappingURL=lists.min.js.map